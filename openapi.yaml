openapi: "3.0.0"
info:
  version: "1.0.0"
  title: Service Name
paths:
  /v4/shortlinks/checker:
    get:
      summary: route to check if the service is up.
      operationId: checker
      tags:
        - checker
      responses:
        '200':
          description: Returning OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: Always true for 200 response.
                  message:
                    type: string
                example:
                  success: true
                  message: "OK"
  /v4/shortlinks/shortlinks:
    post:
      summary: generate a new shortlink linking to the given url.
      operationId: createShortlink
      tags:
        - generation
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - url
              properties:
                url:
                  type: string
                  description: The url we want to create a shortlink to.
              example: { url: "https://map.geo.admin.ch"}
      responses:
        "200":
          description: returning a json containing the requested shortlink
          content:
            application/json:
              schema:
                type: object
                properties:
                  success:
                    type: boolean
                    description: true when we have a 200 response
                  shorturl:
                    type: string
                    description: the shortlink which redirect to the given url
                example:
                  success: true
                  shorturl: https://s.geo.admin.ch/001003004005
        "400":
          description: >-
            Bad requests can happen for multiple reasons:
            1. There was no json payload
            2. There was no url field in the json payload.
            3. The given url was bigger than 2046 characters.
            4. The given url has no hostname.
            5. Either the hostname or the domain from the given url are not part of those allowed.
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
                example:
                  success: false
                  error:
                    code: 400
                    message: "The property 'url' is missing from the request body"
        "403":
          description:
            The request origin header was not set to an authorised value, or not set at all.
          content:
            application/json:
              schema:
                $ref: "#components/schemas/error/"
                example:
                  success: false
                  error:
                    code: 403
                    message: "Shortlink Error: Invalid Origin. ( No origin given )"
        "500":
          description: Unexpected error. The most probable cause would be that writing in the database failed
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/error"
                example:
                  success: false
                  error:
                    code: 500
                    message: "Write units exceeded: [error description here]}"


  /v4/shortlinks/shortlinks/{shortlinksId}:
      get:
        summary: >-
        get an url from a shortlink. By default return a json, but with the redirect parameter set to true,
        redirect instead to the corresponding url.
        operationId: retrieveShortlink
        tags:
          - fetch
        parameters:
          - in: path
            name: shortlinksId
            schema:
              type: string
            required: true
            description: the shortlinks ID which corresponds to the url we want to retrieve
          - in: query
            name: required
            schema:
              type: boolean
            description: default to false. Describe if we want a json or a redirection as a response to this route.
        responses:
          "200":
            description: returning a json containing the requested url
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    success:
                      type: boolean
                      description: true when we have a 200 response
                    shorturl:
                      type: string
                      description: the shortlinksId given as a parameter
                    full_url:
                      type: string
                      description: the corresponding url
                  example:
                    success: true
                    shorturl: https://s.geo.admin.ch/001003004005
                    full_url: https://map.geo.admin.ch
          "301":
            description: redirection to the url corresponding to the shortlinks ID
            content:
              text/html:
                schema:
                  example:

          "400":
            description: The redirect parameter was set to an incoherent value
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/error"
                  example:
                    success: false
                    error:
                      code: 400
                      message: "redirect parameter set to a non accepted value : maybe"
          "404":
            description: The shortlinks ID has no corresponding URL
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/error"
                  example:
                    success: false
                    error:
                      code: 404
                      message: "This short url doesn\'t exist: https://s.geo.admin.ch/nonexistent"
          "500":
            description: Unexpected error. The most probable cause would be that reading in the database failed
            content:
              application/json:
                schema:
                  $ref: "#/components/schemas/error"
                  example:
                    success: false
                    error:
                      code: 500
                      message: "Unexpected internal server error: [error description]"


components:
  schemas:
    error:
      type: object
      properties:
        success:
          type: boolean
          description: Always false in case of error.
        error:
          type: object
          properties:
            code:
              type: integer
              description: Error code.
            message:
              type: string
              description: Description of the error.
